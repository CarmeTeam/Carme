# ----------------------------------------------------------------------------------------------------------------------------------
# Carme
# ----------------------------------------------------------------------------------------------------------------------------------
# settings.py - central frontend settings
#
# see Carme development guide for documentation:
# * Carme/Carme-Doc/DevelDoc/readme.md
#
# Copyright 2019 by Fraunhofer ITWM
# License: http://open-carme.org/LICENSE.md
# Contact: info@open-carme.org
# ----------------------------------------------------------------------------------------------------------------------------------


import os
import logging
#import ldap
#from django_auth_ldap.config import LDAPSearch, PosixGroupType, LDAPGroupQuery, GroupOfNamesType
from django.urls import reverse_lazy


# Carme config ---------------------------------------------------------------------------------------------------------------------
from importlib.machinery import SourceFileLoader
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SourceFileLoader('CarmeConfigFrontend', '/etc/carme/CarmeConfig.frontend').load_module()
from CarmeConfigFrontend import *

CSRF_TRUSTED_ORIGINS=['https://'+CARME_URL,'https://*.127.0.0.1']

# quick-start settings -------------------------------------------------------------------------------------------------------------
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = CARME_FRONTEND_KEY
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = CARME_FRONTEND_DEBUG
ALLOWED_HOSTS = [CARME_URL, CARME_LOGINNODE_IP, '*',]
CSRF_FAILURE_VIEW = 'carme.views.csrf_failure'
#-----------------------------------------------------------------------------------------------------------------------------------


# define installed applications ----------------------------------------------------------------------------------------------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'carme.apps.DbModelConfig',
    'maintenance_mode',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites.apps.SitesConfig',
    'django.contrib.humanize.apps.HumanizeConfig',
    'django_nyt.apps.DjangoNytConfig',
    'django_db_logger',
    'mptt',
    'todo',
    'sekizai',
    'sorl.thumbnail',
    'wiki.apps.WikiConfig',
    'wiki.plugins.attachments.apps.AttachmentsConfig',
    'wiki.plugins.notifications.apps.NotificationsConfig',
    'wiki.plugins.images.apps.ImagesConfig',
    'wiki.plugins.macros.apps.MacrosConfig',
    'django_otp', 
    'django_otp.plugins.otp_static', 
    'django_otp.plugins.otp_totp',
    'two_factor',
    'two_factor.plugins.phonenumber',   
    'two_factor.plugins.yubikey',
    'otp_yubikey',
    'mathfilters',
    'misaka',
    'dal',
    'dal_select2',
    'projects',
				'profiles', 
]
#-----------------------------------------------------------------------------------------------------------------------------------


# define middleware ----------------------------------------------------------------------------------------------------------------
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_otp.middleware.OTPMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'maintenance_mode.middleware.MaintenanceModeMiddleware',
]
#-----------------------------------------------------------------------------------------------------------------------------------


# root url -------------------------------------------------------------------------------------------------------------------------
ROOT_URLCONF = 'scripts.urls'
#-----------------------------------------------------------------------------------------------------------------------------------


# define templates -----------------------------------------------------------------------------------------------------------------
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'maintenance_mode.context_processors.maintenance_mode',
                'sekizai.context_processors.sekizai',
                'django_settings_export.settings_export',
            ],
        },
    },
]
#-----------------------------------------------------------------------------------------------------------------------------------


# CarmeConfig exports --------------------------------------------------------------------------------------------------------------
SETTINGS_EXPORT = [
            'CARME_FRONTEND_LINK_PROXY',
            'CARME_FRONTEND_LINK_MONITOR',
            'CARME_FRONTEND_LINK_SWITCH',
            'CARME_FRONTEND_LINK_LDAP',
            'CARME_FRONTEND_LINK_DISCLAIMER',
            'CARME_FRONTEND_LINK_PRIVACY',
            'CARME_FRONTEND_DEBUG',
            ]
#-----------------------------------------------------------------------------------------------------------------------------------


# define wsgi app -----------------------------------------------------------------------------------------------------------------
WSGI_APPLICATION = 'scripts.wsgi.application'
#-----------------------------------------------------------------------------------------------------------------------------------


# Database -------------------------------------------------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': CARME_DB_DB,
        'USER': CARME_DB_USER,
        'PASSWORD': CARME_DB_PW,
        'HOST': CARME_DB_NODE,
        'PORT': CARME_DB_PORT,
    },

    'slurm': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'slurm_acct_db',
        'USER': CARME_DB_USER,
        'PASSWORD': CARME_DB_PW,
        'HOST': CARME_DB_NODE,
        'PORT': CARME_SLURM_DB_PORT,
    },

}

DATABASE_ROUTERS = ('carme.dbrouters.MyDBRouter',)

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
#-----------------------------------------------------------------------------------------------------------------------------------


# password validation --------------------------------------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
#-----------------------------------------------------------------------------------------------------------------------------------


# logging --------------------------------------------------------------------------------------------------------------------------
# https://docs.python.org/4.2/library/logging.html 

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[{asctime}]: {levelname}: {module} {process:d} {thread:d} {message}',
            'style': '{',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'simple': {
            'format': '[{asctime}]: {levelname}: {message}',
            'style': '{',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '/opt/Carme-Apache-Logs/django.log',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        }
    }
}
#-----------------------------------------------------------------------------------------------------------------------------------


# Login ----------------------------------------------------------------------------------------------------------------------------
LOGIN_URL = 'two_factor:login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = 'account/login/'
#----------------------------------------------------------------------------------------------------------------------------------


# internationalization -------------------------------------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/4.2/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = CARME_TIMEZONE
USE_I18N = True
USE_L10N = True
USE_TZ = True
#-----------------------------------------------------------------------------------------------------------------------------------


# static files (CSS, JavaScript, Images) -------------------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = CARME_FRONTEND_PATH+'/Carme-Django/static/'


# wiki app -------------------------------------------------------------------------------------------------------------------------
WIKI_ACCOUNT_HANDLING = False
WIKI_ACCOUNT_SIGNUP_ALLOWED = False
SITE_ID = 1
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#-----------------------------------------------------------------------------------------------------------------------------------


# maintanence mode -----------------------------------------------------------------------------------------------------------------
MAINTENANCE_MODE_IGNORE_SUPERUSER = True
MAINTENANCE_MODE_IGNORE_URLS = 'account/login/' 
#-----------------------------------------------------------------------------------------------------------------------------------


# auto logout ----------------------------------------------------------------------------------------------------------------------
SESSION_EXPIRE_AT_BROWSER_CLOSE = True      # logout at browser close
SESSION_AUTO_LOGOUT_TIME = 60*60            # logout after one hour of inactivity
SESSION_TIMEOUT_REDIRECT = 'account/login/' # redirect to login page
#-----------------------------------------------------------------------------------------------------------------------------------
